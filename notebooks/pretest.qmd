---
title: "Pretest"
format: 
  html:
    math: mathjax
  pdf: default
  docx: default
author: Marc PÃ©rez
date: 2025-05-22
---

## Context

To explore, whether the proposed mechanisms and experiments to assess their dynamic, in a first step the Treatment levels $0P$ and $166P$ for all sites were analyzed. The experiments were conducted as displayed in the original paper of Flossmann & Richter with adjustments according to developments in technique and available equipment of the soil laboratory. Instead of the CAL-method, the Olsen-method was used to measure and estimate the quantity of P.

## Model of P-release after Flossman & Richter
$$\frac{dP}{dt}=k\times(P^S-P)$$
The constant $P^S$ denotes the amount of semi-labile P and was originally estimated as $P_\text{Olsen}-P_{H_2O}$. Subsequently the DE is solved exactly, since the soil is as $t=0$ mixed with deionized water, it was assumed that $P(0)=0$

## Exact Solution
$$P(t)=P^{\text{S}}-C\times e^{-kt}$$

for $P(0)=P_0$ we receive:

$$P(t)=P^S-(P^S-P_0)\times e^{-kt}$$

If we set $P(0)=0$ we receive:

$$P(t)=P^S\times(1-e^{-kt})$$

## Linearization
Now we linearize the DE, so that a linear model can be employed to test the relation and estimate the parameters of interest:

$$P(t)=P^S-(P^S-P_0)\times e^{-kt}$$

$$P(t)-P^S=-(P^S-P_0)\times e^{-kt}$$

$$P^S-P(t)=(P^S-P_0)\times e^{-kt}$$

$$1-\frac{P(t)}{P^S}=(1-\frac{P_0}{P^S})\times e^{-kt}$$

Given $P_0=0$,

$$log(1-\frac{P(t)}{P^S})=-kt$$

## Setup and preparation of dataset


```{r setup}
#| include: false
#| message: false
#| warning: false
library(tidyr)
library(lme4)
library(ggplot2)
library(ggtext)
library(ggpmisc)
library(nlme)
library(latex2exp)
library(kableExtra)
library(broom)
options(warn = -1)
# Dataset preparation
d <- read.csv(file = "./data/P-release.csv", na.strings = c("", "n.a."))
d$Treatment <- d$Treatment |> factor()
d$uid <- paste(d$Site, d$Treatment, as.character(d$Repetition), sep="_")
d$Repetition <- as.factor(d$Repetition)
d$flos <- d$Pv_Olsen.mg.L.-d$Pv_labile.mg.L.
d$flos[d$flos <= 0] <- quantile(d$flos[d$flos > 0], 0.025, na.rm=TRUE)/2
d$Y1 <- log(1 - d$Pv.mg.L. / d$flos) # one timeseries removed, since flos too low
d$Y1[is.nan(d$Y1)] <- NA
```

Now we can see, whether our linearized model displays a linear relation.

```{r}
#| echo: false
#| warning: false
#| message: false
res <- lmList(Y1 ~ t.min. | uid, d,na.action = na.pass)
summary(res)
ggplot(d, aes(y=Y1, x=t.min., col = Repetition)) +
  geom_point() +
  facet_grid(Site ~ Treatment) + 
  labs(x=TeX("$Time (min)$"),
       y=TeX("$ln(1-\\frac{P}{P_S})$")) +
  geom_smooth(method="lm", alpha = 0.3) 

```

If the parameter for the plateau could be estimated directly by using a non-linear non-least-squares model, we could omit the Olsen-measurement in the future.

```{r}
#| echo: false
#| warning: false
#| message: false

Res <- nlsList(Pv.mg.L. ~ PS * (1 - exp(-k * t.min.)) | uid, d[, c("Pv.mg.L.", "uid", "t.min.")],  start=list(PS=0.1,k=0.2))
summary(Res)
d$nls_pred <- predict(Res)
rr <- coef(Res) %>% as.data.frame() 
rr$uid <- rr %>% rownames()
d <- merge(d,rr,by= "uid")


p1 <- ggplot(data = d, aes(y=Pv.mg.L., x=t.min., col = Repetition)) +
  geom_point() +
  geom_hline(aes(yintercept = PS),d) +
    geom_smooth(method="nls", se=FALSE, formula = Pv.mg.L. ~ PS * (1 - exp(-k * t.min.))) +
  facet_grid(Treatment ~ Site) +
  geom_line(aes(y=nls_pred)) +
  
  labs(x=TeX("$Time (min)$"),
       y=TeX("$P_{V}(\\frac{mg}{L})$")) 

suppressWarnings(print(p1))


```
As a next step it is of interest, if the model parameters of method LM and method NLS compare favourably to observed values. We plot the measured labile P vs. the model Parameters.


```{r}
p2 <- ggplot(d,aes(y=k*PS, x=Pv_labile.mg.L., col = Repetition, group = Site)) +
  geom_point(aes(shape=Site, size = Treatment)) +
  labs(x=TeX("$P_{H_2O}(\\frac{mg}{L})$"),
         y=TeX("$V_{Desorption}=k*P_S (\\frac{mg}{L*min})$"))
  #facet_grid(Site ~ Treatment) + 
  
p2

p3 <- ggplot(d,aes(y=k, x=Pv_labile.mg.L., col = Repetition, group = Site)) +
  geom_point(aes(shape=Site, size = Treatment)) +
  labs(x=TeX("$P_{H_2O}(\\frac{mg}{L})$"),
         y=TeX("k(s^{-1}"))
  #facet_grid(Site ~ Treatment) + 
  
p3


```

