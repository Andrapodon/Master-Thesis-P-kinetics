{
  "hash": "32280e382fc88cff324e45fdeb430348",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Prediction Analysis for WSL\nauthor: Lukas Graz\ndate: 2025-02-13\n---\n\n::: {.cell}\n\n```{.r .cell-code .hidden  code-fold=\"false\"}\n#| code-fold: false\nRES <- readRDS(\"data/RES.rds\")\nDmlr <- RES$nlme.coef.mrg\n# d <- RES$data\n```\n:::\n\n\n\n\n\n## Setup\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden  code-fold=\"true\" code-summary=\"Benchmark helper function\"}\n#| code-fold: true\n#| code-summary: \"Benchmark helper function\"\nlibrary(mlr3verse, quietly = TRUE)\n\nmse <- msrs(c(\"regr.mse\"))\n\nif (!interactive())\n  lgr::get_logger(\"mlr3\")$set_threshold(\"warn\")\n\nget_benchi_table <- function(tasks, nfolds = 5) {\n  set.seed(123)\n  learners <- lrns(c(\"regr.featureless\", \"regr.lm\", \"regr.xgboost\", \"regr.ranger\"))\n  learners$regr.xgboost$param_set$set_values(\n    eta = 0.04, \n    nrounds = 300, \n    max_depth = 2\n  )\n\n  benchi <- xfun::cache_rds({\n    benchmark(benchmark_grid(\n      tasks, \n      learners, \n      rsmp(\"cv\", folds = nfolds)\n    ))\n  }, \n  file = \"benchmark.rds\", \n  dir = \"cache/\",\n  hash = list(tasks, nfolds)\n  )\n  \n  res <- tidyr::pivot_wider(benchi$aggregate(mse), \n    id_cols = task_id,\n    names_from = learner_id,\n    values_from = regr.mse\n  ) |> as.data.frame()\n  \n  rownames(res) <- res$task_id\n  res <- res[, -1]\n  colnames(res) <- gsub(\"regr.\", \"\", colnames(res))\n  stopifnot(any(colnames(res) == \"featureless\"))\n  res <- 1 - res / res$featureless\n  res[, -1, drop = FALSE] |> round(3)\n}\n```\n:::\n\n\n\n\n\nTesting prediction quality using\n\n- Linear models \n- Random forests (default parameters)\n- XGBoost (with parameter tuning)\n\n**Weather Variables:**\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| echo: false\nWeather_vars <- c(\n  \"anavg_temp\", \"ansum_prec\",\n  \"juvdev_prec\", \"juvdev_sun\",\n  \"ansum_sun\", \"juvdev_temp\"\n)\nstopifnot(all(Weather_vars %in% names(Dmlr)))\nWeather_vars\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"anavg_temp\"  \"ansum_prec\"  \"juvdev_prec\" \"juvdev_sun\"  \"ansum_sun\"  \n[6] \"juvdev_temp\"\n```\n\n\n:::\n:::\n\n\n\n\n\n**Phosphor Variable sets:**\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#| echo: false\nP_var_sets <- list(\n  onlyweather = NULL,\n  k = \"k\",\n  PS = \"PS_log\",\n  kPS = c(\"PS_log\", \"k\", \"kPS_log\"),\n  AAE10 = \"soil_0_20_P_AAE10_log\",\n  CO2 = \"soil_0_20_P_CO2_log\",\n  AAE10_CO2 = c(\"soil_0_20_P_AAE10_log\", \"soil_0_20_P_CO2_log\"),\n  AAE10_CO2_kPS = c(\"soil_0_20_P_AAE10_log\", \"soil_0_20_P_CO2_log\", \"PS_log\", \"k\", \"kPS_log\"),\n  CO2_kPS = c(\"soil_0_20_P_CO2_log\", \"PS_log\", \"k\", \"kPS_log\")\n)\n```\n:::\n\n\n\n\n\n\n**Response Variables**\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nY_vars <- c(\"Ymain_rel\", \"annual_P_uptake\", \"annual_P_balance\")\n```\n:::\n\n\n\n\n\n## With Weather data\n\n### TODO: Group - cross validation\n\n```\n\\(nam){\n  mytsk <- as_task_regr(\n    Dmlr[complete.cases(Dmlr$Ymain_rel), c(y, Weather_vars, P_var_sets[[nam]], \"Site\")],\n    target = y,\n    id = nam)\n  mytsk$set_col_roles(\"Site\", \"group\")\n  mytsk\n}\n```\n\n\nAlgorithm learns to predict location from weather since we do not do stratified cross-validation (leaving out locations).\n\n### Ymain_rel\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden  code-fold=\"true\"}\n#| code-fold: true\ny <- \"Ymain_rel\"\nlapply(names(P_var_sets), \\(nam) as_task_regr(\n    Dmlr[complete.cases(Dmlr$Ymain_rel),c(y, Weather_vars, P_var_sets[[nam]])],\n    target = y,\n    id = nam)) |>\n  get_benchi_table() |> knitr::kable()\n```\n\n::: {.cell-output-display}\n\n\n|              |    lm| xgboost| ranger|\n|:-------------|-----:|-------:|------:|\n|onlyweather   | 0.201|   0.518|  0.520|\n|k             | 0.186|   0.476|  0.487|\n|PS            | 0.234|   0.603|  0.585|\n|kPS           | 0.265|   0.569|  0.555|\n|AAE10         | 0.294|   0.530|  0.582|\n|CO2           | 0.259|   0.569|  0.578|\n|AAE10_CO2     | 0.288|   0.515|  0.594|\n|AAE10_CO2_kPS | 0.347|   0.596|  0.607|\n|CO2_kPS       | 0.275|   0.530|  0.575|\n\n\n:::\n:::\n\n\n\n\n\n|              |    lm| xgboost| ranger|\n|:-------------|-----:|-------:|------:|\n|onlyweather   | 0.201|   0.518|  0.520|\n|k             | 0.186|   0.476|  0.487|\n|PS            | 0.234|   0.603|  0.585|\n|kPS           | 0.265|   0.569|  0.555|\n|AAE10         | 0.294|   0.530|  0.582|\n|CO2           | 0.259|   0.569|  0.578|\n|AAE10_CO2     | 0.288|   0.515|  0.594|\n|AAE10_CO2_kPS | 0.347|   0.596|  0.607|\n|CO2_kPS       | 0.275|   0.530|  0.575|\n\n### annual_P_uptake\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden  code-fold=\"true\"}\n#| code-fold: true\ny <- \"annual_P_uptake\"\nlapply(names(P_var_sets), \\(nam) as_task_regr(\n    Dmlr[complete.cases(Dmlr$annual_P_uptake),c(y, Weather_vars, P_var_sets[[nam]])],\n    target = y,\n    id = nam)) |>\n  get_benchi_table()  |> knitr::kable()\n```\n\n::: {.cell-output-display}\n\n\n|              |    lm| xgboost| ranger|\n|:-------------|-----:|-------:|------:|\n|onlyweather   | 0.468|   0.649|  0.648|\n|k             | 0.456|   0.564|  0.609|\n|PS            | 0.477|   0.594|  0.617|\n|kPS           | 0.459|   0.560|  0.474|\n|AAE10         | 0.503|   0.619|  0.621|\n|CO2           | 0.481|   0.615|  0.642|\n|AAE10_CO2     | 0.484|   0.566|  0.580|\n|AAE10_CO2_kPS | 0.465|   0.528|  0.423|\n|CO2_kPS       | 0.487|   0.536|  0.428|\n\n\n:::\n:::\n\n\n\n\n\n|              |    lm| xgboost| ranger|\n|:-------------|-----:|-------:|------:|\n|onlyweather   | 0.468|   0.649|  0.648|\n|k             | 0.456|   0.564|  0.609|\n|PS            | 0.477|   0.594|  0.617|\n|kPS           | 0.459|   0.560|  0.474|\n|AAE10         | 0.503|   0.619|  0.621|\n|CO2           | 0.481|   0.615|  0.642|\n|AAE10_CO2     | 0.484|   0.566|  0.580|\n|AAE10_CO2_kPS | 0.465|   0.528|  0.423|\n|CO2_kPS       | 0.487|   0.536|  0.428|\n\n### annual_P_balance\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden  code-fold=\"true\"}\n#| code-fold: true\ny <- \"annual_P_balance\"\nlapply(names(P_var_sets), \\(nam) as_task_regr(\n    Dmlr[complete.cases(Dmlr$annual_P_balance),c(y, Weather_vars, P_var_sets[[nam]])],\n    target = y,\n    id = nam)) |>\n  get_benchi_table()  |> knitr::kable()\n```\n\n::: {.cell-output-display}\n\n\n|              |     lm| xgboost| ranger|\n|:-------------|------:|-------:|------:|\n|onlyweather   |  0.011|   0.120|  0.121|\n|k             | -0.008|   0.313|  0.127|\n|PS            |  0.310|   0.647|  0.608|\n|kPS           |  0.282|   0.609|  0.617|\n|AAE10         |  0.225|   0.510|  0.524|\n|CO2           |  0.225|   0.532|  0.591|\n|AAE10_CO2     |  0.225|   0.546|  0.585|\n|AAE10_CO2_kPS |  0.335|   0.617|  0.596|\n|CO2_kPS       |  0.302|   0.626|  0.631|\n\n\n:::\n:::\n\n\n\n\n\n|              |     lm| xgboost| ranger|\n|:-------------|------:|-------:|------:|\n|onlyweather   |  0.011|   0.120|  0.121|\n|k             | -0.008|   0.313|  0.127|\n|PS            |  0.310|   0.647|  0.608|\n|kPS           |  0.282|   0.609|  0.617|\n|AAE10         |  0.225|   0.510|  0.524|\n|CO2           |  0.225|   0.532|  0.591|\n|AAE10_CO2     |  0.225|   0.546|  0.585|\n|AAE10_CO2_kPS |  0.335|   0.617|  0.596|\n|CO2_kPS       |  0.302|   0.626|  0.631|\n\n## Without Weather data\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nif(\"onlyweather\" %in% names(P_var_sets))\n  P_var_sets <- P_var_sets[-1]\n```\n:::\n\n\n\n\n\nxgboost & ranger are no good in this setting since only very few variables available\n\n### Ymain_rel\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden  code-fold=\"true\"}\n#| code-fold: true\ny <- \"Ymain_rel\"\nlapply(names(P_var_sets), \\(nam) as_task_regr(\n    Dmlr[complete.cases(Dmlr$Ymain_rel),c(y, P_var_sets[[nam]])],\n    target = y,\n    id = nam)) |>\n  get_benchi_table()  |> knitr::kable()\n```\n\n::: {.cell-output-display}\n\n\n|              |     lm| xgboost| ranger|\n|:-------------|------:|-------:|------:|\n|k             | -0.005|  -0.200| -0.312|\n|PS            |  0.060|  -0.141| -0.221|\n|kPS           |  0.054|  -0.343| -0.353|\n|AAE10         |  0.099|   0.104| -0.009|\n|CO2           |  0.068|  -0.086| -0.226|\n|AAE10_CO2     |  0.073|   0.067|  0.064|\n|AAE10_CO2_kPS |  0.072|  -0.045| -0.059|\n|CO2_kPS       |  0.023|  -0.168| -0.196|\n\n\n:::\n:::\n\n\n\n\n\n|              |     lm| xgboost| ranger|\n|:-------------|------:|-------:|------:|\n|k             | -0.005|  -0.200| -0.312|\n|PS            |  0.060|  -0.141| -0.221|\n|kPS           |  0.054|  -0.343| -0.353|\n|AAE10         |  0.099|   0.104| -0.009|\n|CO2           |  0.068|  -0.086| -0.226|\n|AAE10_CO2     |  0.073|   0.067|  0.064|\n|AAE10_CO2_kPS |  0.072|  -0.045| -0.059|\n|CO2_kPS       |  0.023|  -0.168| -0.196|\n\n### annual_P_uptake\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden  code-fold=\"true\"}\n#| code-fold: true\ny <- \"annual_P_uptake\"\nlapply(names(P_var_sets), \\(nam) as_task_regr(\n    Dmlr[complete.cases(Dmlr$annual_P_uptake),c(y, P_var_sets[[nam]])],\n    target = y,\n    id = nam)) |>\n  get_benchi_table()  |> knitr::kable()\n```\n\n::: {.cell-output-display}\n\n\n|              |     lm| xgboost| ranger|\n|:-------------|------:|-------:|------:|\n|k             | -0.006|  -0.265| -0.434|\n|PS            | -0.006|  -0.278| -0.485|\n|kPS           | -0.006|  -0.225| -0.317|\n|AAE10         |  0.021|  -0.139| -0.398|\n|CO2           |  0.005|  -0.126| -0.276|\n|AAE10_CO2     |  0.017|  -0.194| -0.310|\n|AAE10_CO2_kPS |  0.020|  -0.229| -0.363|\n|CO2_kPS       | -0.054|  -0.206| -0.295|\n\n\n:::\n:::\n\n\n\n\n\n|              |     lm| xgboost| ranger|\n|:-------------|------:|-------:|------:|\n|k             | -0.006|  -0.265| -0.434|\n|PS            | -0.006|  -0.278| -0.485|\n|kPS           | -0.006|  -0.225| -0.317|\n|AAE10         |  0.021|  -0.139| -0.398|\n|CO2           |  0.005|  -0.126| -0.276|\n|AAE10_CO2     |  0.017|  -0.194| -0.310|\n|AAE10_CO2_kPS |  0.020|  -0.229| -0.363|\n|CO2_kPS       | -0.054|  -0.206| -0.295|\n\n### annual_P_balance\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden  code-fold=\"true\"}\n#| code-fold: true\ny <- \"annual_P_balance\"\nlapply(names(P_var_sets), \\(nam) as_task_regr(\n    Dmlr[complete.cases(Dmlr$annual_P_balance),c(y, P_var_sets[[nam]])],\n    target = y,\n    id = nam)) |>\n  get_benchi_table()  |> knitr::kable()\n```\n\n::: {.cell-output-display}\n\n\n|              |    lm| xgboost| ranger|\n|:-------------|-----:|-------:|------:|\n|k             | 0.011|   0.175|  0.160|\n|PS            | 0.309|   0.274|  0.178|\n|kPS           | 0.305|   0.279|  0.244|\n|AAE10         | 0.147|   0.062| -0.102|\n|CO2           | 0.189|   0.170|  0.085|\n|AAE10_CO2     | 0.192|   0.062|  0.015|\n|AAE10_CO2_kPS | 0.313|   0.235|  0.201|\n|CO2_kPS       | 0.313|   0.274|  0.243|\n\n\n:::\n:::\n\n\n\n\n\n|              |    lm| xgboost| ranger|\n|:-------------|-----:|-------:|------:|\n|k             | 0.011|   0.175|  0.160|\n|PS            | 0.309|   0.274|  0.178|\n|kPS           | 0.305|   0.279|  0.244|\n|AAE10         | 0.147|   0.062| -0.102|\n|CO2           | 0.189|   0.170|  0.085|\n|AAE10_CO2     | 0.192|   0.062|  0.015|\n|AAE10_CO2_kPS | 0.313|   0.235|  0.201|\n|CO2_kPS       | 0.313|   0.274|  0.243|\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ncor(Dmlr$annual_P_balance, Dmlr$PS) # 0.54389\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.5438943\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ncor(Dmlr$fert_P_tot, Dmlr$PS) # 0.48236\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.4823593\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ncor(Dmlr$annual_P_uptake, Dmlr$PS) # 0.070678\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.07067821\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\nWe did manage to have high predictive power for weather. This could also be due to our regression models recovering location&year from it and hence still overfitting on the test set.\n\nWithout Weather data we only managed for annual balance to get some predictive power (30%). Since we the balance is uptake - fert_P, this means that we mostly predicted fert_P.\nInterestingly PS is best to predict this quantity\n\n### Legacy Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden  code-fold=\"true\" code-summary=\"XGBoost - Parameter Tuning\"}\n#| code-summary: \"XGBoost - Parameter Tuning\"\n#| code-fold: true\n#| eval: false\n\n# Get parameter estimates for XGBoost\n# t <- as_task_regr(\n  # subset(Dmlr[complete.cases(Dmlr$annual_P_balance),], \n    # select = c(\"annual_P_balance\", P_var_sets$AAE10_CO2_kPS#, Weather_vars\n    # )),\n  # target = \"annual_P_balance\"\n# )\n\n# l <- lrn(\"regr.xgboost\",\n  # nrounds = 500  # More iterations due to lower learning rate\n# )\n\n# Create search space\n# ps <- ps(\n  # max_depth = p_int(2, 4),\n  # eta = p_dbl(0.001, 0.3, tags = \"logscale\")\n# )\n\n# Setup tuning\n# instance <- ti(\n  # task = t,\n  # learner = l,\n  # resampling = rsmp(\"cv\", folds = 3),\n  # measure = msr(\"regr.mse\"),\n  # terminator = trm(\"none\"),\n  # search_space = ps\n# )\n\n# Grid search\n# tuner <- mlr3tuning::tnr(\"grid_search\")\n# tuner$optimize(instance)\n# instance$result\n```\n:::\n\n\n\n\n\nYmain_rel\n max_depth      eta learner_param_vals  x_domain regr.mse\n       <int>    <num>             <list>    <list>    <num>\n1:         2 0.067444          <list[5]> <list[2]>   177.18\n\n\nP uptake\n   max_depth      eta learner_param_vals  x_domain regr.mse\n       <int>    <num>             <list>    <list>    <num>\n1:         2 0.034222          <list[5]> <list[2]>   137.41\n\nannual_P_balance\n   max_depth      eta learner_param_vals  x_domain regr.mse\n       <int>    <num>             <list>    <list>    <num>\n1:         2 0.034222          <list[5]> <list[2]>   145.21\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# nlme.coef.mrg$kPS <- nlme.coef.mrg$k * nlme.coef$PS\n# \n# \n# nlme.coef.mrg <- merge(nlme.coef,allP[allP$year>=2017,],by = \"uid\")\n# # add log-transformed versions\n# Dmlr$kPS_log <- log(Dmlr$kPS)\n# Dmlr$PS_log <- log(Dmlr$PS)\n# Dmlr$soil_0_20_P_AAE10_log <- log(Dmlr$soil_0_20_P_AAE10)\n# Dmlr$soil_0_20_P_CO2_log <- log(Dmlr$soil_0_20_P_CO2)\n# \n# Dmlr$k\n# \n# \n# \n# subset(Dmlr, select = c(\"Ymain_rel\", P_var_sets$AAE10_CO2_kPS, Weather_vars))\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}